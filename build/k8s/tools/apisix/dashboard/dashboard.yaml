apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-dashboard
  namespace: ingress-apisix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix-dashboard
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      namespace: ingress-apisix
      labels:
        app: apisix-dashboard
    spec:
      containers:
        - name: apisix-dashboard
          image: apache/apisix-dashboard:latest
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /usr/local/apisix-dashboard/conf/conf.yaml
              name: apisix-dashboard-cm
              subPath: conf.yaml
            - mountPath: /usr/local/apisix-dashboard/logs
              name: logs
      volumes:
        - configMap:
            name: apisix-dashboard-conf
          name: apisix-dashboard-cm
        - hostPath:
            path: /data/apisix/logs
            type: DirectoryOrCreate
          name: logs
---
apiVersion: v1
kind: Service
metadata:
  name: apisix-dashboard
  namespace: ingress-apisix
  labels:
    app: apisix-dashboard   # useful for service discovery, for example, prometheus-operator.
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
  selector:
    app: apisix-dashboard
  type: ClusterIP
  # externalTrafficPolicy: Local invalid: spec.externalTrafficPolicy: Invalid value: "Cluster": may only be set when `type` is 'NodePort' or 'LoadBalancer'
  # sessionAffinity: None

---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: apisix-dashboard
  namespace: ingress-apisix
spec:
  http:
    - name: apisix-dashboard
      match:
        hosts:
          - apisix.hoper.xyz
        paths:
          - /*
      backends:
        - serviceName: apisix-dashboard
          servicePort: 80
          resolveGranularity: service