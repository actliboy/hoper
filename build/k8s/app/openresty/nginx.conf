
#user  nobody;
worker_processes  1;

error_log   stderr;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    resolver 10.96.0.10;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  off;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  off;

    lua_package_path "/lua/lib/lualib/?.lua;;"; #lua 模块
	lua_package_cpath "/lua/lib/clib/?.so;;"; #c模块
	init_by_lua_file /lua/openresty/init/init.lua;

    #fastcgi_intercept_errors on;

    include map.conf;

    server {
        listen       0.0.0.0:80;
        server_name  localhost;
        # charset koi8-r;
       set $lua /lua/openresty;
       location ~^/lua/([-_a-zA-Z0-9/]+) {
            error_page  404 403 500 502 503 504  error;
            default_type 'text/html';
            #lua_code_cache off;
            set $lua_path $1;
            set $module '';
            access_by_lua_file $lua/access/access.lua;
            content_by_lua_file $lua/$lua_path.lua;
        }

        location /static/ {
            log_not_found off;
            access_log off;
            alias  $static/;
        }

      location /secret/ {
         log_not_found off;
         access_log off;
         alias  /secret/;
         auth_basic "登陆验证";
         auth_basic_user_file /usr/local/openresty/nginx/conf/passwd;
       }

        location / {
		    root  $frontend/;
            try_files $uri $uri/ /index.html;
            index index.html;
		}

    }

  server {
        listen       0.0.0.0:80;
        server_name  static.hoper.xyz;

        location / {
            log_not_found off;
            access_log off;
            root  /static/;
        }

    }

    upstream backend{
        server 0.0.0.0;
        balancer_by_lua_file $lua/balancer/backend.lua;
    }

}