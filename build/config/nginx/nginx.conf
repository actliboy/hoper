
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    lua_package_path "D:/code/hoper/alg_lang/lua/lib/lualib/?.lua;;"; #lua 模块
	lua_package_cpath "D:/code/hoper/alg_lang/lua/lib/clib/?.so;;"; #c模块
	init_by_lua_file D:/code/hoper/alg_lang/lua/openresty/init/init.lua;

    #fastcgi_intercept_errors on;

    include map.conf;
    include proxy.conf;

       server {
            #开启http2只需要nginx开启
            listen       80;
            server_name  *.liov.xyz;

            error_page  404 403 500 502 503 504  /error;

              #解决跨域
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin';# http_origin 代表请求的origin
                add_header 'Access-Control-Allow-Credentials' 'true'; #用于有cookie需要跨域，如果没cookie可以不用
                add_header 'Access-Control-Allow-Methods' '*';
                # Custom headers and headers various browsers *should* be OK with but aren't
                add_header 'Access-Control-Allow-Headers' '*';
                # Tell client that this pre-flight info is valid for 20 days
                add_header 'Access-Control-Max-Age' 1728000 always;
                return 200;
            }
            location = /favicon.ico {
                log_not_found off;
                access_log off;
                root  $static/;
            }

            location / {
                proxy_pass  http://$local;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Real-PORT $remote_port;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }

    server {
        listen       80;
        server_name  liov.xyz;
        # charset koi8-r;

        # access_log  logs/host.access.log  main;
          location = /favicon.ico {
                    log_not_found off;
                    access_log off;
                    root  $static/;
                }

        location /api {
            proxy_pass  http://127.0.0.1:9080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /ws {
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host  $http_host;
        }

       location ~^/lua/([-_a-zA-Z0-9/]+) {
                error_page  404 403 500 502 503 504  error;
                default_type 'text/html';
                #lua_code_cache off;
                set $lua_path $1;
                set $module '';
                access_by_lua_file $lua/access/access.lua;
                content_by_lua_file $lua/$lua_path.lua;
            }

        location /static/ {
              log_not_found off;
              access_log off;
              alias  $static/;
        }

        location /secret/ {
             log_not_found off;
             access_log off;
             alias  /secret/;
             auth_basic "登陆验证";
             auth_basic_user_file /usr/local/openresty/nginx/conf/passwd;
          }

        location / {
		    root  $frontend/;
            # vue
            try_files $uri $uri/ /index.html @node;
            index index.html;
		}

        location @node {
            proxy_pass  http://127.0.0.1:3000;
            proxy_set_header Host $http_host;
 			proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html

        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #    root   html;
        # }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one

        # location ~ /\.ht {
        #    deny  all;
        # }
    }


    upstream backend{
        server 0.0.0.0;
        balancer_by_lua_file $lua/balancer/backend.lua;
    }

    # HTTPS server
    #
    server {
        listen       80;
        server_name  hoper.xyz;
        rewrite ^(.*) https://$host$request_uri permanent;

        error_page  404 403 500 502 503 504  /error;
    }

     server {
            listen       80;
            server_name  m.hoper.xyz;
            rewrite ^(.*) https://$host$request_uri permanent;

            error_page  404 403 500 502 503 504  /error;
     }

    server {
        listen       80;
        server_name  localhost;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin';# http_origin 代表请求的origin
            add_header 'Access-Control-Allow-Credentials' 'true'; #用于有cookie需要跨域，如果没cookie可以不用
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # Custom headers and headers various browsers *should* be OK with but aren't
            add_header 'Access-Control-Allow-Headers'
            'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000 always;
            return 200;
        }

        location / {
                    proxy_pass  http://127.0.0.1:30687;
                    proxy_set_header Host $http_host;
        		    proxy_set_header X-Real-IP $remote_addr;
       		        proxy_set_header X-Real-PORT $remote_port;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         }

        location /echo {
            echo "123";
        }

        error_page  404 403 500 502 503 504  /error;
    }

    server {
        #开启http2只需要nginx开启
        listen       443 ssl http2;
        server_name  hoper.xyz;

        ssl_certificate     D:/code/hoper/build/config/tls/cert.pem;
        ssl_certificate_key  D:/code/hoper/build/config/tls/cert.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        error_page  404 403 500 502 503 504  /error;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
            root  $static/;
        }

        location /api {
            proxy_pass  http://127.0.0.1:8090;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/ws {
            proxy_pass http://127.0.0.1:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host  $http_host;
        }

        location /static/ {
            alias  $static/;
        }

        location / {
            root  $frontend/;
            # vue
            try_files $uri $uri/ /index.html;
            index index.html;
        }
    }

}

include tcp.conf;
