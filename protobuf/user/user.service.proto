syntax = "proto3";
package model;
import "user/user.model.proto";
import "response/anyreply.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";

option java_package = "xyz.hoper.protobuf.user";

option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;
option (gogoproto.populate_all) = true;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
external_docs: {
url: "https://hoper.xyz/api";
description: "用户中心api";
}
schemes: HTTPS;
};

service UserService {

    //验证码
    rpc Verify (VerifyReq) returns (response.BytesReply) {
        option (google.api.http) = {
        post: "/api/v1/user/verify"
        body: "*"
        };
    }

    //注册
    rpc Signup (SignupReq) returns (response.BytesReply) {
        option (google.api.http) = {
        post: "/api/v1/user/sign"
        body: "*"
        };
    }

    //激活
    rpc Active (ActiveReq) returns (response.BytesReply) {
        option (google.api.http) = {
        post: "/api/v1/user/active"
        body: "*"
        };
    }
    //编辑
    rpc Edit (EditReq) returns (EditRep) {
        option (google.api.http) = {
        put: "/api/v1/user/{id}"
        body: "*"
        };
    }

    rpc Login (LoginReq) returns (LoginRep) {
        option (google.api.http) = {
        post: "/api/v1/user/login"
        body: "*"
        };
    }

    rpc Logout (LogoutReq) returns (LogoutRep) {
    }

    rpc GetUser (GetReq) returns (response.Reply) {
        option (google.api.http) = {
        get: "/api/v1/user"
        };
    }
}

message VerifyReq {
    string mail = 6 [(gogoproto.moretags) = "validate:\"omitempty,email\" comment:\"邮箱\""];
    string phone = 7 [(gogoproto.moretags) = "validate:\"omitempty,phone\" comment:\"手机号\""];
}

message SignupReq {
    string password = 4 [(gogoproto.moretags) = "validate:\"required,gte=6,lte=15\" comment:\"密码\"",(validator.field) = {
            length_gt: 6
            human_error: "密码错误"
        }];
    string mail = 6 [(gogoproto.moretags) = "validate:\"omitempty,email\" comment:\"邮箱\""];
    string phone = 7 [(gogoproto.moretags) = "validate:\"omitempty,phone\" comment:\"手机号\""];
    //验证码
    string vCode = 8 [(gogoproto.moretags) = "validate:\"required,numeric\" comment:\"验证码\""];
}

message ActiveReq {
    uint64 id = 1;
    string secret = 2;
}

message GetReq {
    uint64 id = 1;
}

message LoginReq {
    string input = 1;
    string password = 2 [(validator.field) = {
            length_gt: 6
            human_error: "密码错误"
        }];
}

message EditReq {
    uint64 id = 1;
    EditUser user = 2;
    message EditUser{
        string name = 2 [(gogoproto.moretags) = "gorm:\"type:varchar(10);not null\" validate:\"required,gte=3,lte=10\" comment:\"名字\""];
        string password = 5 [(gogoproto.jsontag) = "-", (gogoproto.moretags) = "gorm:\"type:varchar(32);not null\" validate:\"gte=8,lte=15\" comment:\"密码\""];
        string mail = 6 [(gogoproto.moretags) = "gorm:\"type:varchar(16);default:''\" validate:\"email\" comment:\"邮箱\""];
        string phone = 7 [(gogoproto.moretags) = "gorm:\"type:varchar(32);default:''\" validate:\"phone\" comment:\"手机号\""];
        //性别，0未填写，1男，2女
        uint32 gender = 8 [(gogoproto.moretags) = "gorm:\"type:tinyint(1) unsigned;default:0\"", (gogoproto.casttype) = "uint8"];
        string birthday = 9 [(gogoproto.moretags) = "gorm:\"type:datetime;default:0\""];
        string address = 14 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string introduction = 10 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string signature = 11 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string avatarURL = 12 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string coverURL = 13 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
    }
}

message EditRep {
    uint64 id = 1;
}

message LoginRep {
    string token = 1;
    User user = 2;
    string msg = 3;
}

message LogoutReq {
    uint64 id = 1;
}

message LogoutRep {
    string msg = 1;
}
