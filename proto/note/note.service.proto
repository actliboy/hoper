syntax = "proto3";
package note;
import "note/note.model.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "utils/empty/empty.imp.proto";
import "utils/response/response.imp.proto";
import "utils/proto/go/policy.imp.proto";

option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;
option (gogoproto.populate_all) = true;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
  }
};

service NoteService {

    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
		description: "笔记相关接口"
    };
    //验证码
    rpc Create (note.Note) returns (response.CommonRep) {
        option (google.api.http) = {
            post: "/api/v1/note"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["笔记相关接口","v1.0.0"]
            summary : "创建笔记"
            description : "创建笔记接口"
        };
    }

}

message CreateNoteReq {
    string title = 2 [(gogoproto.moretags) = "gorm:\"type:varchar(10)\" validate:\"gte=3,lte=10\" comment:\"标题\""];
    string content = 3 [(gogoproto.moretags)="gorm:\"type:text"];
    string public_name = 4 [(cuzproto.non_sensitive) = true];

}
