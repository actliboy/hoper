syntax = "proto3";
package content;
import "content/content.enum.proto";
import "content/action.enum.proto";
import "content/content.model.proto";
import "content/action.model.proto";
import "user/user.model.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "utils/request/empty.proto";
import "utils/response/response.proto";
import "utils/proto/gogo/graphql.proto";
import "utils/oauth/oauth.proto";
import "utils/proto/go/go.proto";

option java_package = "xyz.hoper.protobuf.content";
option go_package = "github.com/liov/hoper/go/v2/protobuf/content";
option (go.file) = {non_omitempty:true};

service ActionService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "动作相关接口"
  };

  // 动作  Like Unlike
  rpc Like (LikeReq) returns (request.Empty) {
    option (google.api.http) = {
      post: "/api/v1/like"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }

  // 评论
  rpc Comment (CommentReq) returns (request.Empty) {
    option (google.api.http) = {
      post: "/api/v1/comment"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }

  // 收藏
  rpc Collect (CollectReq) returns (request.Empty) {
    option (google.api.http) = {
      post: "/api/v1/collect"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }

  // 举报
  rpc Report (ReportReq) returns (request.Empty) {
    option (google.api.http) = {
      post: "/api/v1/report"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
}


message LikeReq{
  ContentType type = 1 [(go.field) = {tags:'annotation:"内容类型"'}];
  uint64 refId = 2 [(go.field) = {tags:'annotation:"相关id"'}];
  ActionType action = 3 [(go.field) = {tags:'annotation:"动作类型"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'},(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
}

message CommentReq{
  ContentType type = 12 [(go.field) = {tags:'json:"-" gorm:"size:1;not null" validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'json:"-" gorm:"size:20;not null;index" validate:"required" annotation:"相关id"'}];
  user.UserBaseInfo user = 2 [(go.field) = {tags:'gorm:"" annotation:"用户"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'},(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  string content = 3 [(go.field) = {tags:'gorm:"size:255;not null" annotation:"内容"'}];
  uint64 parentId = 7 [(go.field) = {tags:'gorm:"size:20;default:0" annotation:"直接父评论ID"'}];
  uint64 rootId = 8 [(go.field) = {tags:'gorm:"size:20;default:0" annotation:"评论根ID"'}];
  uint64 recvUserId = 10 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"接收人id"'}];
  uint32 sequence = 4 [(go.field) = {tags:'gorm:"type:int2;default:0" annotation:"同级别的分类可根据sequence的值来排序，置顶"'}];
}

message CollectReq{
  ContentType type = 12 [(go.field) = {tags:'json:"-" gorm:"type:int2;not null" validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'json:"-" gorm:"size:20;not null;index" validate:"required" annotation:"相关id"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'},(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  uint64 favoritesId = 3 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"用户id"'}];
}

message ReportReq{
  ContentType type = 12 [(go.field) = {tags:'gorm:"type:int2;not null" validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"相关id"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'},(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  DelReason delReason = 3[(go.field) = {tags:'gorm:"type:int2;default:0" annotation:"举报原因"'}];
}