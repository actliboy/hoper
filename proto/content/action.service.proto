syntax = "proto3";
package content;
import "content/content.enum.proto";
import "content/action.enum.proto";
import "content/content.model.proto";
import "content/action.model.proto";
import "user/user.model.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "utils/empty/empty.proto";
import "utils/request/param.proto";
import "utils/response/response.proto";
import "utils/proto/gogo/graphql.proto";
import "utils/oauth/oauth.proto";
import "patch/go.proto";

option java_package = "xyz.hoper.protobuf.content";
option go_package = "github.com/liov/hoper/go/v2/protobuf/content";

service ActionService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "动作相关接口"
  };

  // 动作  Like Unlike
  rpc Like (LikeReq) returns (request.Object) {
    option (google.api.http) = {
      post: "/api/v1/action/like"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
  // 动作  Like Unlike
  rpc DelLike (request.Object) returns (empty.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/action/like/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
  // 评论
  rpc Comment (CommentReq) returns (request.Object) {
    option (google.api.http) = {
      post: "/api/v1/action/comment"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
  // 评论列表
  rpc CommentList (CommentListReq) returns (CommentListRep) {
    option (google.api.http) = {
      get: "/api/v1/action/comment"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Query;
  }
  // 评论
  rpc DelComment (request.Object) returns (empty.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/action/comment/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
  // 收藏
  rpc Collect (CollectReq) returns (empty.Empty) {
    option (google.api.http) = {
      post: "/api/v1/action/collect"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
  // 举报
  rpc Report (ReportReq) returns (empty.Empty) {
    option (google.api.http) = {
      post: "/api/v1/action/report"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }
}


message LikeReq{
  uint64 id = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  ContentType type = 1 [(go.field) = {tags:'annotation:"内容类型"'}];
  uint64 refId = 2 [(go.field) = {tags:'annotation:"相关id"'}];
  ActionType action = 3 [(go.field) = {tags:'annotation:"动作类型"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
}

message CommentReq{
  uint64 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  ContentType type = 12 [(go.field) = {tags:'validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:' validate:"required" annotation:"相关id"'}];
  user.UserBaseInfo user = 2 [(go.field) = {tags:'annotation:"用户"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  string content = 3 [(go.field) = {tags:'annotation:"内容"'}];
  string image = 9 [(go.field) = {tags:'annotation:"图片"'}];
  uint64 replyId = 7 [(go.field) = {tags:'annotation:"回复id"'}];
  uint64 rootId = 8 [(go.field) = {tags:'annotation:"评论根id"'}];
  uint64 recvId = 10 [(go.field) = {tags:'validate:"required" annotation:"接收人id"'}];
  uint32 sequence = 4 [(go.field) = {tags:'annotation:"同级别的分类可根据sequence的值来排序，置顶"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
}

message CommentListReq{
  ContentType type = 1 [(go.field) = {tags:'annotation:"内容类型"'}];
  uint64 refId = 2 [(go.field) = {tags:'annotation:"相关id"'}];
  uint64 rootId = 3 [(go.field) = {tags:'annotation:"评论根节点"'}];
  uint32 pageNo = 4;
  uint32 pageSize = 5;
}

message CommentListRep{
  int64 total = 1;
  repeated Comment list = 2;
  repeated user.UserBaseInfo users = 3;
}

message CollectReq{
  uint64 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  ContentType type = 12 [(go.field) = {tags:'gorm:"type:int2;not null" validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"相关id"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  repeated uint64 favIds = 3 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"用户id"'}];
}

message ReportReq{
  uint64 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  ContentType type = 12 [(go.field) = {tags:'gorm:"type:int2;not null" validate:"required" annotation:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" annotation:"相关id"'}];
  uint64 userId = 5 [(go.field) = {tags:'annotation:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  DelReason delReason = 3[(go.field) = {tags:'gorm:"type:int2;default:0" annotation:"举报原因"'}];
}