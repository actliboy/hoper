syntax = "proto3";
package content;
import "content/moment.enum.proto";
import "content/moment.model.proto";
import "content/common.model.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "utils/request/empty.proto";
import "utils/request/param.proto";
import "utils/response/response.proto";
import "utils/proto/gogo/graphql.proto";
import "utils/oauth/oauth.proto";
import "utils/proto/go/go.proto";

option java_package = "xyz.hoper.protobuf.content";
option go_package = "github.com/liov/hoper/go/v2/protobuf/content";
option (go.file) = {non_omitempty:true};

service ContentService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "内容相关接口"
  };

  // 详情
  rpc Info (GetTagReq) returns (Tag) {
    option (google.api.http) = {
      get: "/api/v1/tag/id/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Query;
  }

  // 新建
  rpc Add (AddTagReq) returns (request.Empty) {
    option (google.api.http) = {
      post: "/api/v1/tag"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }

  // 修改
  rpc Edit (AddTagReq) returns (request.Empty) {
    option (google.api.http) = {
      put: "/api/v1/tag"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Mutation;
  }

  // 修改
  rpc List (TagListReq) returns (TagListRep) {
    option (google.api.http) = {
      get: "/api/v1/tag"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (gogo.graphql_operation) = Query;
  }
}

message GetTagReq {
  string name = 1[(go.field) = {tags:'annotation:"名称"'}];
}

message AddTagReq {
  string name = 1[(go.field) = {tags:'annotation:"名称"'}];
  string description = 2 [(go.field) = {tags:'gorm:"size:100"  annotation:"描述"'}];
  string expressionURL = 3 [(go.field) = {tags:'gorm:"size:255"  annotation:"表情url"'}];
}

message TagListReq{
  string name = 1[(go.field) = {tags:'annotation:"名称"'}];
}

message TagListRep{
  uint32 count = 1;
  repeated Tag list = 2;
}