syntax = "proto3";
package content;
import "content/content.model.proto";
import "common/common.model.proto";
import "content/action.model.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "hopeio/utils/validator/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "hopeio/request/param.proto";
import "danielvladco/protobuf/graphql.proto";
import "hopeio/utils/patch/go.proto";

option java_package = "xyz.hoper.protobuf.content";
option java_multiple_files = true;
option go_package = "github.com/liov/hoper/server/go/protobuf/content";

service ContentService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "内容相关接口"
  };

  //收藏夹列表
  rpc FavList (FavListReq) returns (FavListRep) {
    option (google.api.http) = {
      get: "/api/v1/content/fav/{userId}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }
  //收藏夹列表
  rpc TinyFavList (FavListReq) returns (TinyFavListRep) {
    option (google.api.http) = {
      get: "/api/v1/content/tinyFav/{userId}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }
  // 创建收藏夹
  rpc AddFav (AddFavReq) returns (request.Id) {
    option (google.api.http) = {
      post: "/api/v1/content/fav"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }
  // 修改收藏夹
  rpc EditFav (AddFavReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/content/fav/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }
  // 创建合集
  rpc AddSet (AddSetReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/content/set"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }
  // 修改合集
  rpc EditSet (AddSetReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/content/set/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: MUTATION};
  }
  // 用户内容数量
  rpc GetUserStatistics (request.Id) returns (UserStatistics) {
    option (google.api.http) = {
      get: "/api/v1/content/userStatistics/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags:["v1.0.0"]
    };
    option (danielvladco.protobuf.graphql.rpc) = {type: QUERY};
  }

}



message AddFavReq{
  uint64 id = 1;
  uint64 userId = 17 [(go.field) = {tags:'comment:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  string title = 3 [(go.field) = {tags:'gorm:"size:10;not null" comment:"标题"'}];
  string description = 5 [(go.field) = {tags:'gorm:"type:text;not null" comment:"描述"'}];
  string cover = 4 [(go.field) = {tags:'gorm:"size:255;not null" comment:"封面"'}];
  uint32 sequence = 12 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"同级别的分类可根据sequence的值来排序，置顶"'}];
  uint32 anonymous = 15 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"是否匿名,0-是,1否"'}];
}

message AddSetReq{
  uint64 id = 1;
  uint64 userId = 17 [(go.field) = {tags:'comment:"用户id"'}, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true}];
  ContainerType type = 2 [(go.field) = {tags:'gorm:"type:int2;not null" comment:"类型"'}];
  string title = 3 [(go.field) = {tags:'gorm:"size:10;not null" comment:"标题"'}];
  string description = 5 [(go.field) = {tags:'gorm:"type:text;not null" comment:"描述"'}];
  string cover = 4 [(go.field) = {tags:'gorm:"size:255;not null" comment:"封面"'}];
  uint32 sequence = 12 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"同级别的分类可根据sequence的值来排序，置顶"'}];
  uint32 anonymous = 15 [(go.field) = {tags:'gorm:"type:int2;default:0" comment:"是否匿名,0-是,1否"'}];
}

message FavListReq{
  uint32 userId  = 1 [(go.field) = {tags:'comment:"权限,0-自己可写的，1-可读写"'}];
}

message FavListRep{
  int64 total = 1;
  repeated Favorite list = 2;
}

message TinyFavListRep{
  int64 total = 1;
  repeated TinyFavorites list = 2;
}

message TinyFavorites{
  uint64 id = 1 [(go.field) = {tags:'gorm:"primaryKey"'}];
  string title = 3 [(go.field) = {tags:'gorm:"size:10;not null" comment:"标题"'}];
}

message ContentReq{
  ContentType type = 12 [(go.field) = {tags:'gorm:"type:int2;not null" validate:"required" comment:"相关类型"'}];
  uint64 refId = 6 [(go.field) = {tags:'gorm:"size:20;not null;index" validate:"required" comment:"相关id"'}];
}
