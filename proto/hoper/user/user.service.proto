syntax = "proto3";
package model;
import "user/user.model.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "utils/empty.proto";


option java_package = "xyz.hoper.protobuf.user";

option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;
option (gogoproto.populate_all) = true;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  }
};

service UserService {

    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
		description: "用户相关接口"
    };
    //验证码
    rpc Verify (utils.Empty) returns (VerifyRep) {
        option (google.api.http) = {
            get: "/api/v1/verifyCode"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","util","v1.0.0"]
            summary : "验证码"
            description : "验证码生成接口"
        };
    }

    //注册验证
    rpc SignupVerify (SingUpVerifyReq) returns (SingUpVerifyRep) {
        option (google.api.http) = {
            post: "/api/v1/user/signupVerify"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "注册验证"
            description : "注册验证接口"
        };
    }

    //注册
    rpc Signup (SignupReq) returns (SignupRep) {
        option (google.api.http) = {
            post: "/api/v1/user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "注册"
            description : "注册接口"
        };
    }

    //激活
    rpc Active (ActiveReq) returns (ActiveRep) {
        option (google.api.http) = {
            get: "/api/v1/user/active/{id}/{secret}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "激活"
            description : "激活接口"
        };
    }
    //编辑
    rpc Edit (EditReq) returns (EditRep) {
        option (google.api.http) = {
            put: "/api/v1/user/{id}"
            body: "details"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "编辑"
            description : "编辑接口"
            security: {
				security_requirement: {
					key: "Authorization";
                    value: {}
                }
            };

        };
    }
    //登录
    rpc Login (LoginReq) returns (LoginRep) {
        option (google.api.http) = {
            post: "/api/v1/user/login"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "登录"
            description : "登录接口"
        };
    }
    //退出
    rpc Logout (LogoutReq) returns (LogoutRep) {
        option (google.api.http) = {
            get: "/api/v1/user/logout"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "退出"
            description : "退出接口"
        };
    }
    //获取用户信息
    rpc GetUser (GetReq) returns (GetRep) {
        option (google.api.http) = {
            get: "/api/v1/user/{id}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags:["用户相关接口","v1.0.0"]
            summary : "获取用户信息"
            description : "获取用户信息接口"
            security: {
				security_requirement: {
					key: "Authorization";
                    value: {}
                }
                security_requirement: {
                    key: "OAuth2";
                    value: {
                        scope: "read";
                        scope: "write";
                    }
                }
            };
        };
    }
}

message VerifyRep{
    sint32 code = 1;
    string message = 2;
    //验证码
    string details = 3;
}

message SingUpVerifyReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
                title: "注册验证请求"  //和message前注释一样的效果
		    };
        example: {
            value: '{ "mail": "123@qq.com", "phone": "12345678901"}'
            }
    };
    //邮箱
    string mail = 6 [(gogoproto.moretags) = "validate:\"omitempty,email\" comment:\"邮箱\""];
    //手机号
    string phone = 7 [(gogoproto.moretags) = "validate:\"omitempty,phone\" comment:\"手机号\""];
}

message SingUpVerifyRep {
    sint32 code = 1;
    string message = 2;
    //验证码
    string details = 3;
}

message SignupReq {
    //密码
    string password = 4 [(gogoproto.moretags) = "validate:\"required,gte=6,lte=15\" comment:\"密码\"", (validator.field) = {
            length_gt: 5
            human_error: "密码最短6位"
        }, (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "密码"
                        min_length: 6}];
    //邮箱
    string mail = 6 [(gogoproto.moretags) = "validate:\"omitempty,email\" comment:\"邮箱\""];
    //手机号
    string phone = 7 [(gogoproto.moretags) = "validate:\"omitempty,phone\" comment:\"手机号\""];
    //验证码
    string vCode = 8 [(gogoproto.moretags) = "validate:\"required,numeric\" comment:\"验证码\""];
}

message SignupRep {
    sint32 code = 1;
    string message = 2;
    User details = 3;
}

message ActiveReq {
    uint64 id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title:"ID"
    type: INTEGER}];
    string secret = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title:"密钥"}];
}

message ActiveRep{
    sint32 code = 1;
    string message =2;
}

message GetReq {
    uint64 id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title:"ID"
    type: INTEGER}];
}

message GetRep {
    sint32 code = 1;
    string message =2;
    User details = 3;
}

message EditReq {
    uint64 id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    title:"ID"
    type: INTEGER}];
    EditDetails details = 2;
    message EditDetails {
        string name = 2 [(gogoproto.moretags) = "gorm:\"type:varchar(10);not null\" validate:\"required,gte=3,lte=10\" comment:\"名字\""];
        string password = 5 [(gogoproto.jsontag) = "-", (gogoproto.moretags) = "gorm:\"type:varchar(32);not null\" validate:\"gte=8,lte=15\" comment:\"密码\""];
        string mail = 6 [(gogoproto.moretags) = "gorm:\"type:varchar(16);default:''\" validate:\"email\" comment:\"邮箱\""];
        string phone = 7 [(gogoproto.moretags) = "gorm:\"type:varchar(32);default:''\" validate:\"phone\" comment:\"手机号\""];
        //性别，0未填写，1男，2女
        uint32 gender = 8 [(gogoproto.moretags) = "gorm:\"type:tinyint(1) unsigned;default:0\"", (gogoproto.casttype) = "uint8", (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
           type:INTEGER
    }];
        string birthday = 9 [(gogoproto.moretags) = "gorm:\"type:datetime;default:0\""];
        string address = 14 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string introduction = 10 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string signature = 11 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string avatarURL = 12 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
        string coverURL = 13 [(gogoproto.moretags) = "gorm:\"type:varchar(255);default:''\""];
    }
}

message EditRep {
    sint32 code = 1;
    string msg = 2;
}

message LoginReq {
    string input = 1;
    string password = 2 [(validator.field) = {
            length_gt: 6
            human_error: "密码错误"
        }];
}

message LoginRep {
    sint32 code = 1;
    string msg = 2;
    LoginDetails details = 3;
    message LoginDetails{
        User user = 1;
        string token = 2;
    }
}

message LogoutReq {
    uint64 id = 1 [(gogoproto.moretags) = "gorm:\"type:tinyint(1) unsigned;default:0\"", (gogoproto.casttype) = "uint8", (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
           type:INTEGER
    }];
}

message LogoutRep {
    sint32 code = 1;
    string msg = 2;
}
